// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// api/api.proto
package protobuf

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiProto = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3b\x5d\x73\x1b\x37\x92\xef\xfa\x15\x5d\x7a\x39\xea\xca\x22\x2d\xf9\x23\x39\x69\x7d\x59\x2e\xe5\x38\x2c\xdb\x92\x4a\x94\xed\xca\x13\x0b\x9c\x69\x0e\xb1\x9a\x01\x26\x00\x86\x34\xb3\x95\xff\x7e\x85\xaf\x19\x60\x66\x48\xc9\xb2\x72\xa9\xdb\x3a\x55\x25\x26\x81\x46\xa3\xd1\xdd\xe8\x2f\x34\x47\x23\x98\xf0\x72\x2b\x68\xb6\x52\x70\xfa\xfc\xe4\x47\x98\x91\x42\x56\x2c\x83\xd9\xc5\x0c\x26\x39\xaf\x52\xb8\x24\x8a\xae\x11\x26\xbc\x28\x2b\x45\x59\x06\xb7\x48\x0a\x20\x95\x5a\x71\x21\x87\x07\xa3\xd1\xc1\x68\x04\x1f\x68\x82\x4c\x62\x0a\x15\x4b\x51\x80\x5a\x21\x8c\x4b\x92\xac\xd0\xcf\x3c\x83\xcf\x28\x24\xe5\x0c\x4e\x87\xcf\x61\xa0\x01\x0e\xdd\xd4\xe1\xd1\xb9\x46\xb1\xe5\x15\x14\x64\x0b\x8c\x2b\xa8\x24\x82\x5a\x51\x09\x4b\x9a\x23\xe0\xd7\x04\x4b\x05\x94\x41\xc2\x8b\x32\xa7\x84\x25\x08\x1b\xaa\x56\x66\x1f\x87\x45\x53\x02\xbf\x3a\x1c\x7c\xa1\x08\x65\x40\x20\xe1\xe5\x16\xf8\x32\x04\x04\xa2\x1c\xd1\xfa\x6f\xa5\x54\x79\x36\x1a\x6d\x36\x9b\x21\x31\x04\x0f\xb9\xc8\x46\xb9\x05\x95\xa3\x0f\xd3\xc9\xdb\xcb\xd9\xdb\xe3\xd3\xe1\x73\xb7\xe8\x13\xcb\x51\x4a\x10\xf8\x5b\x45\x05\xa6\xb0\xd8\x02\x29\xcb\x9c\x26\x64\x91\x23\xe4\x64\x03\x5c\x00\xc9\x04\x62\x0a\x8a\x6b\xa2\x37\x82\x6a\xbe\x3d\x03\xc9\x97\x6a\x43\x04\x6a\x34\x29\x95\x4a\xd0\x45\xa5\x22\x9e\x79\x12\xa9\x8c\x00\x38\x03\xc2\xe0\x70\x3c\x83\xe9\xec\x10\xfe\x31\x9e\x4d\x67\xcf\x34\x92\x2f\xd3\xdb\x5f\xae\x3e\xdd\xc2\x97\xf1\xcd\xcd\xf8\xf2\x76\xfa\x76\x06\x57\x37\x30\xb9\xba\xbc\x98\xde\x4e\xaf\x2e\x67\x70\xf5\x33\x8c\x2f\x7f\x85\xf7\xd3\xcb\x8b\x67\x80\x54\xad\x50\x00\x7e\x2d\x85\x3e\x01\x17\x40\x35\x37\x31\x35\xac\x9b\x21\x46\x24\x2c\xb9\x25\x49\x96\x98\xd0\x25\x4d\x20\x27\x2c\xab\x48\x86\x90\xf1\x35\x0a\xa6\x35\xa1\x44\x51\x50\xa9\xa5\x2a\x81\xb0\x54\xa3\xc9\x69\x41\x15\x51\x66\xa8\x73\xae\xe1\x81\x06\xf9\x48\x93\x15\xc1\x1c\x3e\x23\xc3\xdf\x29\x81\xbf\x15\x6b\xfb\xe9\xef\x59\x41\x68\x3e\x4c\x78\xf1\xdf\x1a\x6e\x9c\xd3\x3b\x02\x1f\x88\x90\xc8\xe0\x6f\x44\x7f\x1b\xe6\xe6\x5b\x08\x78\x20\xb7\x4c\x91\xaf\xf0\x06\x0e\x4b\xc1\x15\x7f\x71\x78\x7e\x70\x50\x92\xe4\x4e\x93\x9a\xe4\x95\x54\x28\xe6\x05\x61\x24\x43\x31\x27\x25\x3d\x3f\x38\xa0\x45\xc9\x85\x82\xc3\x8c\xf3\x2c\xc7\x11\x29\xe9\x88\x30\xc6\x1d\xd9\x43\x83\xe6\xf0\xbc\x06\x33\xdf\x93\xe3\x0c\xd9\xb1\xdc\x90\x2c\x43\x31\xe2\xa5\x01\xed\x5d\x76\x70\x60\x67\x61\x90\x89\x32\x19\x66\x44\xe1\x86\x6c\xed\x74\x32\xcf\x90\xcd\x1d\x96\xa1\xc3\x32\xe4\x25\x32\x52\xd2\xf5\xa9\x9f\x39\x82\x37\xf0\xaf\x03\x00\xca\x96\xfc\xcc\x7c\x02\x50\x54\xe5\x78\x06\x87\x13\x7b\x24\xf8\x68\x8f\x04\xe3\xeb\xe9\xe1\xb9\x81\x58\xdb\x0b\x76\x06\x87\xeb\xe7\xc3\xd3\xe1\x73\x37\x9c\x70\xa6\x48\xa2\x3c\x1e\xfd\xc7\x48\xa1\x51\xf9\xbb\x3e\xb9\x9c\xdc\x3a\x60\xfd\x57\x89\xfc\x0c\x0e\xf5\xc5\x90\x67\xa3\x51\x46\xd5\xaa\x5a\x68\x5e\x8f\xa4\x85\x3f\x4e\x58\xa2\x46\x8e\xb5\xc7\x8e\xb5\xc7\xa4\xa4\x01\x0e\xd4\x02\x3a\x83\x43\x92\x16\x94\xfd\x3d\x5c\x38\xa4\xdc\xc1\xfd\xa1\xff\x31\xff\xc3\xaf\x0a\x05\x23\xf9\x3c\xe5\x89\xf4\x84\x7e\x2f\x19\x29\xca\x44\x50\xc3\xe2\x33\x38\xfc\xc8\x05\x02\x59\xf0\x4a\xc1\x2e\x0e\xfe\x71\x00\x20\x93\x15\x16\x28\xcf\xe0\x97\xdb\xdb\xeb\xd9\x79\x7b\x44\x0f\x24\x9c\xc9\xca\x8c\x1c\xba\x8b\xaf\xb7\x18\xfd\x53\x72\x66\xd0\x94\x82\xa7\x55\xb2\x6b\xfe\x8f\xf3\x83\x03\x89\x62\x4d\x13\xac\x09\xb1\xe7\xd5\xf7\x99\xe6\xb9\x5e\xbf\xa6\xc6\x52\x12\xaf\xbf\x66\x5e\x94\x09\x4c\x04\x12\x85\x7e\xdd\x20\xfa\xfa\x51\x66\x47\x20\x50\x55\x82\xc9\xd6\xd4\x0d\x96\xf9\xf6\x28\x50\x80\x5a\x43\xcd\x0d\x18\x92\x92\x0e\x35\xa3\xbd\xde\x35\x7f\x25\x97\x0a\xce\xe0\xd0\x5c\x92\xf5\x89\x67\xf7\x61\x04\xb4\xe0\xe9\x56\x03\xfd\x67\x33\xfc\x87\x13\x71\x74\x32\x81\x4a\x50\x5c\x5b\x3b\x23\x15\x51\x95\xd4\xb6\xb9\x3e\xa6\xb6\x21\x40\x95\x84\xbb\x6a\x81\x09\x67\x4b\x9a\x19\x33\x94\x70\xc6\x30\x51\x74\x4d\xd5\xb6\x66\xc5\x3b\x54\x35\x1f\x9a\xcf\x31\x13\x9a\xf1\xc7\x73\x20\xc3\xfd\x0c\xe8\x3d\x69\x8a\x39\x2a\xec\x11\xe0\x85\x99\xa8\x09\x8f\xbe\xc6\xb4\x47\x53\x8f\x27\xdf\x51\xf2\xcd\x27\x20\xe9\x3f\x2b\xa9\x80\xec\x55\xc7\xb1\x01\x72\x34\x5e\xf2\x14\x25\x0c\xa2\xb1\xf8\x48\xd1\xd4\x77\xe8\x64\xf5\x27\xa8\x24\x81\x9c\x4a\xa5\xd5\xd1\xe1\x93\x3d\x9a\xf6\x41\x83\x0c\xe2\xef\xbb\x34\x4e\xcf\x3d\xb5\xd6\x8d\x34\x8d\xf7\x9c\x88\x32\xa9\x48\x9e\xc3\x80\x0b\x10\xe8\xbe\x1d\x81\xa2\x79\x1e\x48\xee\xda\x4b\xf5\xd6\x8c\xc3\xa0\x35\x10\x9f\xaa\x35\xf9\x74\xe6\xc4\x52\xf5\x38\xd1\xed\x38\xe8\x0a\xf3\x02\x92\x15\x11\xca\x43\xdf\xea\x40\x72\xa3\x97\x2c\x50\x7b\x05\x25\xaa\xc4\x84\xb4\xd4\xd8\x1e\x0d\x0a\x2b\x22\x81\xe4\x02\x49\xba\x85\x05\x22\x83\x14\xcb\x9c\x6f\x31\x6d\xe2\x4c\x49\x0a\x34\x9e\xb3\x66\xe2\xd4\xee\xf9\x0b\xe6\xc5\xc4\x60\x19\xb4\x47\x62\x36\xb6\x67\x9f\x8e\x8f\xfa\xd0\x8f\xe3\xa2\xb3\x0f\xf5\x71\x5b\xec\x6b\x6c\x56\x70\xca\xd6\x40\x9f\xdd\x7a\x82\x33\x76\x2d\x57\x7c\xca\x5d\xf7\xb9\x12\xcc\x87\x42\x26\x80\x12\x85\x71\xc0\xce\xf9\x93\x92\x82\xf6\xbf\xc1\x5d\x78\x87\xca\xe5\x26\xd3\x00\x7c\xd0\x0c\x77\xae\xb8\x1b\x7f\xb2\xeb\xed\xc8\x7d\xd8\xd9\xaa\x32\x13\x24\x45\xb7\x99\x34\x1e\x92\x40\x46\xd7\xc8\x3a\x06\xfa\x1d\xaa\x4f\x16\xdc\x59\xa5\xf6\x09\x77\xce\x76\xce\xbc\x13\xf2\xc9\x8d\x9c\x3b\xe0\x7d\x0e\x4a\x29\x2c\x4a\xa5\x73\x2c\xcf\x91\xae\x83\x8a\x89\x86\x41\xfc\x3d\x3e\x63\x3c\xf7\xd4\xee\xa9\x7b\xaa\x6f\xb9\xa5\x55\x99\x12\x1d\x4f\x6c\x24\x24\x02\x53\x64\x8a\x92\x5c\xea\x34\x39\x75\xf2\xef\x9e\x5c\xaf\x18\x7f\x99\x4d\x02\xf8\x41\xdf\x68\x9b\x0b\x5d\x88\xa7\xe3\x45\x83\x73\x44\x36\xf2\xfb\x78\xf1\x7b\x25\xf0\x1b\xb9\xa1\x97\xf4\xf1\xa3\x35\xde\xcb\x91\x16\xcc\x9f\xc3\x13\xbd\xc9\xc3\xb9\xf2\xc7\xc1\x01\xb2\xaa\xb0\xce\x3c\xad\x13\x09\x9d\x76\x2f\x29\xc3\x14\xde\xc0\x73\x0b\xab\x15\xe7\x0d\x9c\xb8\x2f\x86\x73\x6f\xe0\xd4\xa5\x8d\xc5\x86\x98\xef\x2f\xce\x6b\x8c\xee\x12\xcc\x6c\x8c\x5e\xe7\x27\x97\x5c\x81\x44\xeb\x19\x66\xb7\xe3\xdb\x4f\xb3\xf9\xa7\xcb\xd9\xf5\xdb\xc9\xf4\xe7\xe9\xdb\x8b\x66\x3b\xe3\x74\x11\xae\x6f\xae\x3e\x4f\x67\xd3\xab\xcb\xe9\xe5\x3b\x13\xef\x23\x50\x96\xea\x84\x08\xa5\x71\xa9\x3e\xee\xa7\x12\x16\x48\x59\xa6\xc5\x49\x14\xa6\x43\x83\x25\x5a\x5e\x53\xef\x70\xdf\x7c\xba\xbc\x17\xad\x76\xea\xc6\x99\x3b\xb4\x36\xbf\x90\xb0\xac\xf2\x7c\x0b\x95\x24\x8b\x1c\xed\x56\x1e\x5b\xcd\x14\xbf\xcb\xdb\xc9\xd5\xe5\x64\xfa\xa1\x7f\x27\xa2\x40\xf2\x02\x61\xc3\xc5\x9d\xc6\x4b\x4c\x58\x91\x6f\xdd\x61\x52\xce\x10\x38\x0b\x49\x7a\x06\xb2\x4a\x56\x40\xa4\xb3\x59\x1a\x4c\x4f\x17\xc4\x10\xcc\x05\x30\x9e\x62\x5d\x28\x72\xc4\x05\x44\x18\x29\x05\x04\xce\x6e\xaf\xae\xaf\x1f\xcc\x5e\xeb\x52\x53\x27\x3f\xb7\xf2\x0d\xbc\x8c\x50\xbe\xbd\xb9\xb9\xba\xd9\x8b\xaf\x20\xfa\x88\x50\x31\xcb\x42\xb3\xd8\xae\x7a\x03\xaf\x22\x5c\x17\x6f\xdf\xdd\x8c\x2f\xde\x5e\xec\x45\xe7\x4a\x69\xe6\x02\x0b\xc3\x44\xcd\x34\x0e\x02\xa5\xd2\x59\xbb\x16\x17\x2c\x2b\x66\x26\x48\xee\x93\xc0\x1a\xf7\x1b\x78\x6d\x34\xb7\x40\x29\x49\x86\x30\x21\x79\xbe\x20\xc9\x5d\xa3\xb7\x9a\x94\x4f\x37\x1f\x34\xd2\x44\x87\x8c\x66\x56\x71\x33\x2d\x95\xd0\xac\xa9\x44\xde\xd1\xb1\xe9\x85\x2f\x1d\x6a\x12\x51\xaa\x70\x81\x1b\x9a\xd3\xd4\x6a\x4d\x48\x40\x2b\x2d\x0f\x2e\x90\x8e\x21\x1d\x4e\x7f\x7c\xc5\x35\x33\xeb\x34\xcb\x89\xc7\xed\xa2\xe3\xcd\x0e\x5d\xa5\xbf\xef\xbe\x36\x67\xfc\xb0\x81\x88\xb6\xf6\x76\x61\x56\x62\xd2\x2c\x0a\x75\xbc\x66\x55\x10\x28\x59\x3c\x7e\x22\xf1\x1f\xbc\x7d\xe8\x3d\xa4\xb1\x86\x41\x1d\x63\x85\xa6\xd4\x68\xf4\x59\x45\xa7\xdd\x10\x19\x9e\x15\x16\x5b\x5b\xe8\x0d\x39\xbc\xe0\x3c\x07\x7e\xd7\x39\x77\x8a\x8a\xd0\x5c\xb6\x19\xe8\x96\x6a\x7d\x29\x39\x93\x56\x1f\x7d\x9c\xa2\xb0\xa8\x01\xdb\x72\x8a\xca\x06\x0f\x11\x52\xce\xf9\x1d\xa6\x50\x95\x7b\x45\x34\xfe\x32\x83\xc0\x53\x98\xe1\x96\x23\xb6\xf6\xb8\x91\x83\xf1\x2e\xdd\x45\x6d\x7f\xe5\x2d\x77\x63\x03\x42\x5a\xbd\x84\x25\x0c\xc8\xc6\x39\x93\x91\xb5\xee\x23\x54\xc9\x91\x35\xaa\x5e\x0d\x02\x7d\x78\xb9\x83\x2b\x2d\xa9\x4e\x5b\x56\xc5\x5a\x36\xb9\x95\x0a\x8b\xae\xdc\x42\x29\x5c\x18\xc1\xed\x95\x45\xbb\x12\x12\x2a\x13\x51\xda\x84\x05\x7b\xff\x87\xb4\x5c\x57\xdc\xe6\x73\x7c\xfb\x6f\x27\x90\xc7\x5c\xd0\x57\xbb\x39\xda\x12\xe5\x84\x57\x79\x1a\x49\xd3\xa7\xc6\x3a\x09\xdc\x79\x09\x67\x75\xcd\x6e\x87\x51\x74\x45\xbd\xdd\x17\xcd\x55\x4c\x1a\x4a\x1e\x2c\x9b\x93\xc7\xca\xe6\xf4\x7f\xe7\xb2\xd4\xf5\x9e\xc7\x5e\x18\xb7\xe8\x43\x6f\x19\x0a\x4b\x1b\xc1\xf4\x98\xb5\x2e\xbb\x43\xa0\x86\x98\x8b\x96\x4d\x0b\xe5\x66\x9c\xd8\x49\x2f\xa3\x7a\xa0\xdd\x05\x0b\x6e\x4b\x9a\x52\xeb\x9c\x7b\x32\xee\xb8\xd8\xbb\x03\xa5\x05\x98\xfb\x13\xb4\xc3\x9c\xdd\xeb\xe3\x48\xb5\xd6\xbf\x97\x7d\x0c\x09\xcc\xd0\xff\x7d\xb6\x84\x66\x31\xa8\x97\xeb\x10\xc7\x96\xcb\xf5\xc7\x1d\x68\x03\xf8\xd0\xd8\x84\x28\xcd\xc3\x0d\x2c\x90\x08\xe3\xfd\xee\x90\x85\x08\xec\xb8\x19\xee\xc4\x7c\xdf\x2c\xab\xd7\xbb\xe3\x8a\x28\x82\xe9\xf5\x08\xf5\xcd\x3c\x86\xa4\x12\x02\x99\xca\x5d\x44\x41\xad\xe5\xe0\x3a\x5e\x25\xf2\xde\xa0\xca\x97\x8c\xf8\x12\xde\x57\x0b\x14\x0c\x15\x46\xab\xee\x7e\x94\x73\x0f\x64\xa4\x6c\x26\x39\x43\xbe\xac\xa9\x98\x87\x72\x6e\xd2\x3e\xb7\x85\xb6\x75\xdd\x90\xad\x13\xb6\x8d\xbf\xcc\xcc\x79\xad\xdd\x7b\x71\xbe\x03\xea\xbd\x83\x72\x66\xee\xe5\x0e\xb8\xcf\x1f\xbf\x10\x81\x06\xb4\xce\xf4\x7e\xf0\x19\xe4\x03\x02\x36\x2a\xe1\x97\x71\x63\xad\x56\x34\x5b\xcd\xc9\x9a\xd0\x9c\x2c\xa8\x8e\xc5\x3b\xf2\x5f\x92\x85\xa0\x89\x8b\x98\x74\x4e\x1e\xb1\x1e\x95\xce\x96\xe6\x0e\xc8\x08\x7f\xa7\xf4\x3d\x23\xa2\x38\x5e\x33\xf1\x82\x28\x02\x13\x64\x5e\xb1\xc6\x5f\x66\x7a\xc8\x8e\x40\x4a\x14\x99\x27\xf6\x73\x28\xe5\xd0\x39\x68\xea\x2a\x1a\xfb\xc0\x3e\xdf\x13\xd6\x17\xc2\xab\xfd\x8f\x5f\xaf\x80\x2a\x2c\x6a\x87\x75\x2d\xdc\x8d\xaa\x04\xa6\xda\xc4\xe8\x90\x56\xf2\x4a\x24\x28\xa3\x7b\x6b\x8a\xc0\x2c\x41\xc8\x04\xaf\xca\x96\x79\x1f\x7f\x99\xf9\xf9\x77\x7a\xda\x16\xb9\x59\x82\x73\x0b\x6d\xe5\xdc\x48\x8d\x26\xab\x0e\x33\x3c\x2b\x63\xa6\x44\xca\x68\x17\x0a\xcc\x4c\xc5\xa2\x92\xc7\x48\xa4\x3a\x3e\x79\x06\xa8\x92\xe1\x51\x0d\x59\x67\x3a\x99\xd5\xf9\x93\xf3\x2e\x92\x48\x15\x7e\xe7\x0c\x65\x80\x70\xf1\x0c\xfc\xe7\xd3\xc4\x7c\xde\xa0\xfe\x9c\xb6\x77\xaa\x19\xe0\xb6\x0c\xb1\xce\x2d\xd6\x9a\xfb\x8d\xd6\xfe\xcc\x05\x6c\x56\xc8\x6c\x16\xae\x56\x94\x65\x12\xb4\x86\xfb\x4a\xbe\xcb\xfb\xdb\x6c\xe9\x91\x55\xe7\xae\x7e\xbe\x9e\x00\x4d\x9f\xc1\x22\x27\xec\xce\x54\x95\xf4\x7f\x87\x16\xa3\xbe\xf5\xe6\xfb\x96\x57\x87\xcf\x60\x49\xf3\x1c\x53\xa0\x4b\xd3\xc3\xa2\x09\xd0\xea\xf1\xf9\x7a\xd2\xe6\xe4\xba\x4c\xe6\xa1\x4f\xf1\x61\x15\x26\x95\xd0\xfc\x33\x42\x6e\x2f\x92\x6e\xd6\xaa\x40\x9d\x6f\xb6\xe8\x9d\x8e\x3f\x82\xe0\x79\xd3\xb7\xe1\xef\xef\x80\x08\x76\xe4\x2f\x94\x94\x3c\xa1\xc6\xf4\xa4\x69\x7b\x1f\x4a\x8a\xb9\xc6\x30\x27\x82\x35\x1a\xdb\x70\xbb\xa5\xb8\x60\x8b\x4c\x40\x40\x6d\x4b\x34\xa5\x15\x56\x15\x0b\x6d\x44\x96\xb5\xda\xca\x36\xeb\x63\xed\x8e\xb8\x5e\xe3\x37\xf8\x06\xc5\xab\x61\x4e\x44\x86\x3b\x94\xd2\x00\xb5\x19\xf9\x91\x32\x5a\x54\x45\x1f\x21\x30\x48\x71\x49\xaa\x5c\x99\xbb\xff\x3b\x0a\xde\xa0\xa4\x4c\xbd\x38\x85\x82\xb2\xf9\x6f\x15\x61\xca\x1a\xb5\x98\xc5\x1f\xc9\xd7\xef\xc0\x4c\xbe\x86\x98\x5f\x04\xf5\xbb\xd1\x48\x87\x90\xa1\xf3\x19\x5f\x4f\x61\x66\x1f\x28\x82\x20\xb3\x79\x89\x80\x7f\xb9\x75\x36\xd8\xd4\xe2\xf6\xab\x7d\x40\xde\x5d\xd7\x0e\x4c\x97\xc0\x4b\x14\xd6\x4d\xe9\x8c\xfc\xea\xfd\x8e\x04\xce\xa3\xea\x79\x20\xe9\x5c\x19\x45\x32\x5f\xee\xca\xa8\x4e\xc7\x4b\x2e\xa9\xe2\x62\xdb\x96\x5d\x46\x55\xe0\x49\x4f\x3a\xba\xbc\x22\x72\xe5\xe3\x07\x8d\x29\xe1\x45\x41\x55\x1f\x16\x3b\xd3\x91\x56\x8f\x3b\x53\x02\xd1\x1c\x35\xc9\x91\x30\x6b\x36\xb4\x07\xe8\x45\xab\x81\xe7\xb6\x64\x15\x39\xe0\xd1\x48\x5b\x5b\x13\x03\x1a\xef\xd1\x5e\x6b\x06\xe7\xa9\x5d\xf7\x32\x5a\xf7\xb9\x91\x70\xc6\x6d\xa9\xda\x84\x6a\x45\x49\x5d\x05\x2d\xa4\x81\x07\xfc\x79\x15\xe1\x99\xd8\x15\xa2\xf1\xac\xc1\xba\xc4\x4f\x1a\xbf\x1a\xac\xba\xce\x89\xd2\x92\x03\xaa\x2c\x13\x2c\xa0\x2d\x97\x8f\x40\x54\xcc\xf4\x73\x05\x11\x89\xc3\x58\xfa\x85\x3d\x41\x83\x3f\xd2\xb4\x95\x9a\xf6\xe8\x8a\x3b\x4d\x14\x1e\xf9\xac\xc5\x09\x3d\x89\xbd\x73\xe5\x5a\xd0\x8c\xc1\xf5\x65\x52\xef\xa8\x03\x83\x12\x3a\xeb\x28\x4e\x98\x61\x22\x50\xbd\xc7\xed\xd4\x9e\x52\xdf\xab\x71\x92\xa0\x8c\x82\x3a\x69\xa0\xe6\x77\xb8\x9d\xb7\x82\xfd\x06\x87\x5d\xf5\x1e\xb7\x35\x1e\xb2\x0b\x8f\x9d\xd0\xe8\xba\xa5\x64\xeb\x45\x77\xa3\xa8\xdd\xac\xad\xb3\x7d\x17\x5f\xda\xb9\x70\x1c\x41\x95\xe5\x5e\x9e\x90\xb2\xec\x63\xc6\x2d\x32\xc2\xd4\x9e\x03\x28\x0b\xd0\x3e\xf8\x35\x91\x72\xc3\x45\xba\x67\x65\xe9\x41\x3a\xe5\xed\x6a\x51\x37\x71\xed\xe3\x7e\x00\x66\x49\x7f\xe9\x55\xcb\xe4\x32\x49\xc2\x2b\xa6\xec\xad\x33\x05\xc7\xa8\xb0\xe7\x7c\xba\x0d\xa4\x9b\xa0\x6d\x80\x5f\xcf\x20\xe7\x24\x85\x05\xc9\xb5\xa5\x17\x47\x2d\x06\xbb\x74\xc6\x76\x73\x8d\xdd\x26\x11\xab\x27\x39\x45\xa6\xa6\x29\x0c\xc8\x1d\x39\x33\x9c\xbf\x38\x0a\x29\x4f\x0c\x40\x1f\xbb\xed\x52\xab\x81\x6e\xb9\x67\x53\x1f\x06\xab\x80\xfe\x52\xf5\x87\xd3\xef\xfb\xc2\x69\x73\xea\x76\x0c\xe9\x70\xe7\x3c\xf1\x77\xf5\x5b\xc3\xe8\xb6\x06\xee\x0a\xa4\xf7\x87\xc3\xef\xbf\x25\x1c\x7e\x82\x00\xa5\xbd\x5f\xc7\xc7\xb1\xa0\x04\xd0\x1b\xad\xc5\xb9\x65\x9b\x32\x1b\xda\xcc\x14\x61\x29\x11\xe9\xfc\xe2\x74\xbe\x3e\xdd\x1f\xe0\x9c\xfe\x69\x01\xce\x8b\x3f\x2d\xc0\x79\x19\x04\x38\xbd\x9a\x18\xe4\xa4\xb5\x32\x7e\x24\xc9\x8a\xea\x40\x7f\x63\xf2\x0a\xed\xa1\x04\x95\xd8\xd1\xac\x5a\x39\x2c\x12\xb7\xcc\xe0\x4a\x38\x53\x82\xe7\xf3\x32\x27\x0c\xe7\xcc\xf4\xa3\x85\x16\xe5\x09\xb6\xd0\xc9\x2b\x8a\x1a\x77\xf8\x72\x46\x25\xc8\x95\xa9\xab\x2e\xb4\xd2\xad\x49\x5e\x21\xe4\xf4\x0e\x81\x96\x67\xa6\x93\xd8\xbc\x18\xfa\x46\x24\x02\x6b\x2a\x54\x45\x72\x98\x5e\x8f\xf4\xb4\xc7\xa4\xed\xa5\xb6\x53\xf6\x8d\xaa\xee\x8d\x85\xa4\x92\x8a\x17\x28\xa4\x4b\xad\x4d\xbf\xb9\x8d\x21\x8a\x8a\x99\x77\xb5\x3d\x25\x1f\x52\xd2\x39\xb2\xb4\xe4\xd4\x98\xe8\xb8\x54\xdc\x14\x3c\x3e\x90\x05\xe6\xb1\x85\xf0\x2a\x4f\x20\xd7\x93\xf7\x17\x52\xcc\xc1\xfb\x17\xd8\xb9\x96\xe7\x8f\x4a\x22\xee\x01\xbf\xee\x3a\xd7\x9c\xae\xe9\xec\xca\x23\xa2\xb4\x92\x9a\x53\x85\x75\x90\xb3\xd9\x2f\x3d\x9e\xa2\x06\x69\x53\xbd\xe2\x52\xed\x59\x67\xa6\xdb\x9e\xcd\x08\xb5\x67\x8d\xbd\x14\x66\xb6\xed\xd0\xee\x7e\x94\x75\xb8\x5e\x67\x6a\x56\x6d\xc1\xa8\xed\xd0\x6a\x92\x79\x06\xa6\x12\x38\xcb\xb7\x40\xfc\xfb\x30\x5d\xfa\x5f\x45\x60\x6e\x5e\xb2\xdd\x43\xff\x70\x87\x33\x8d\x1f\x76\x8d\x34\x64\xbd\x6d\xe1\x6e\x43\xac\xf2\x6d\x55\x70\x8b\xda\x1a\xd3\x6d\x17\xec\x7f\x3f\xb3\x0d\x7e\x30\x02\xdf\x91\xef\xfa\xb4\xfb\xb4\xa8\x69\x1e\xf0\xfd\x3a\x6e\x75\x73\xad\x5c\x97\x9f\xf9\x49\x44\xec\x04\xfd\xab\x52\x5c\xad\x95\x25\x49\x70\x1f\x1a\xca\xda\x94\xd8\x25\xa1\xa8\x69\xa1\x09\x1f\xd0\x65\x9d\x4c\x38\x7b\x78\x64\x79\xe9\x3a\x28\x7f\xab\xc8\x76\x48\xf9\x48\xf2\x02\xb3\x6a\xeb\x7a\x1b\x23\x5f\x6d\x31\xbd\x81\x93\x86\xca\x20\x2f\xb0\x0b\x4c\x97\x9b\xfd\xe5\x88\xed\x6f\x1c\xd5\xfd\x4d\x8a\xc3\x60\x7d\x3a\x3c\x39\x19\x3e\x37\x4e\x23\xc2\xdd\x24\x0c\x41\xad\x49\x86\x42\xa8\xdb\x62\x8e\x37\x34\xf5\xa3\x3f\x79\xd8\x99\xe5\x0e\x55\xb0\x22\x6b\x8c\x41\x6d\x31\xb8\x14\x74\x4d\x73\xcc\x50\xfe\xd4\x64\x8b\xfe\x17\x16\x06\x2e\xd4\xb8\x9a\xfd\xae\x53\x82\xaa\xd0\x3c\x3a\xdb\x65\x11\x3b\x59\x76\x8a\x40\x7a\x72\xce\x1a\x3c\x61\xa5\xf1\xc1\xef\x46\xaf\x1f\xfb\x6e\xf4\xc3\xd3\xbe\x1b\xfd\xf8\xb8\x37\xbd\xff\xda\x77\xed\xda\xcf\xee\xc4\xca\xbb\xc9\xed\x65\x65\xac\xd2\xb2\xca\xbb\xf9\x3d\x04\xc5\x74\x87\x5f\xc2\x06\x05\xda\x5e\xc2\x50\xb7\x9a\xf7\x87\xf8\xa1\xa9\xa7\xdd\x35\x78\x63\x7c\x8a\x4b\x6c\xa8\xeb\x60\x68\x57\x95\x9d\x71\x99\x17\x84\x65\xed\x0e\x07\xd3\xb2\x3a\x43\xa5\x93\x25\x2b\xf1\x77\xc8\x50\xd0\xa4\x69\x68\xb5\x2d\xc0\xe1\xc5\x79\xb0\x76\xbd\x7c\xac\x76\xbd\x7a\x5a\xed\x7a\xfd\x38\xed\xfa\x61\xaf\x38\xff\x6a\xf5\xea\xf6\x19\xff\xd5\xda\x45\xfa\xd5\xeb\xd2\x77\x85\xfb\xbd\xfe\x9d\x14\x6a\x0c\x15\xa3\xbf\x55\x08\xd4\xfd\xa0\x31\x75\xb1\x66\xbb\x6d\xa7\xaf\x31\xea\x87\xc7\xe9\xe5\x8f\xfb\xf4\xe0\xaf\x56\xcb\x8e\xfd\xe8\x7d\x98\x0c\x33\x45\xdb\x5d\x5f\x20\x53\x7b\xa3\xe7\xf6\x72\x17\xbd\x70\xb7\xde\xd6\x32\x9a\x9f\x94\xb5\x3a\xd8\xfa\x83\x97\xa8\x7b\xc6\x50\xdb\xaa\xcb\x7a\x96\xba\x31\x33\xbd\xf3\xa1\xd9\x62\x60\x3b\xd4\xbd\xff\x25\xd9\xce\xba\xf0\xa4\x3f\x62\x79\x15\x2f\x24\x02\x9d\x44\x6d\x87\xfb\x80\xa1\xd4\x71\xc1\x96\x14\x39\x1c\x9b\xa9\xcf\x3a\x91\x90\x43\x33\xa2\xe3\x67\x64\x4a\x1e\x75\x32\x8d\xd8\xff\x9b\x90\x9d\x6c\x4d\x49\x87\x37\x3f\xfd\x18\x98\x8c\x83\x8a\x8c\x94\xa5\x0e\x3e\x78\x5e\x99\x6d\x83\x10\x6b\xb1\x55\x28\x2d\xf8\xdc\x63\x30\xba\x1d\x55\x0f\xda\x9c\x6c\x3d\xb9\x35\x1c\xf9\x74\xf3\xa1\x09\xfe\x6b\x99\xb4\x0b\x00\x51\x47\x62\x0f\x16\x23\xa8\x5a\x14\x5d\xbd\x3a\xed\xc9\xc2\xef\xe9\xf8\xef\x8f\xe1\x1f\x6d\x43\xfe\x9a\x0e\xac\x9e\x7e\x31\x97\x79\xa3\xd1\xac\x84\x33\xa9\x09\xd4\xac\xd2\x52\x70\xd1\x75\xcf\xcd\xec\xb4\xfa\xec\xff\x0d\x44\xe0\x9c\x08\x6b\x37\x57\xb9\x5d\x76\xf7\x56\x19\xb2\xdd\x95\xb0\xaf\x98\x25\x97\x92\xea\x40\xd9\xfe\x3c\x9f\xf1\x4d\x6f\x98\x5c\xaf\x69\xdb\xa9\xce\x8f\x1d\xfe\x5f\xbc\x6d\xf1\xf6\xf0\xde\x20\xd9\x60\xd8\xa0\xcd\x7f\xba\xcf\x6c\x7d\x93\x73\x7b\xbd\x47\x4a\xbd\xbe\x8d\x4a\x20\x81\x53\xdb\xdd\x2b\x1b\xa0\x6d\xff\x0c\x73\x6f\x3f\xe5\x23\x19\xd8\xdf\x19\xf5\x68\x7d\x3a\xfd\x76\x7d\x6a\xd4\xa2\x46\x98\xac\x74\x12\x60\xd7\xb4\x9a\x73\xdc\xd4\xb7\x34\xe6\x8c\x46\x11\x23\xe3\xd6\x9c\xe0\x65\x2e\x86\x6a\xb5\xe6\xbc\xde\x01\xb7\xb7\x35\xe7\x91\x61\x53\xe4\x91\x76\xed\x16\x31\xa0\x55\x15\xdd\x20\x6c\x08\x53\x36\x3b\x4f\xfb\x2a\x8a\xb0\xbf\x44\x4a\xd2\xb4\xae\x8f\xb6\x9e\xe7\x77\xee\x24\xb0\xe0\x6b\x84\xa5\xe0\xc5\x43\xb6\xbb\x31\xe0\xe1\xa6\x16\x41\xbd\x6f\xdc\x2a\x12\x97\x0f\xbb\x8b\x3b\xfa\xb0\xab\x18\x08\x9d\x82\xe0\x49\xef\x46\xbd\xda\x10\xed\xf2\xa0\x47\x94\x5e\x8b\x18\x3f\xa4\xc4\x0c\xbe\xe4\x29\xc2\xb5\xb6\x08\x97\x7d\x71\x01\x4f\x71\x5e\xea\xd9\xf6\xb3\x82\xad\xf9\x9b\xe0\x3e\x11\x48\x24\xc2\xa2\x79\xb4\xb7\xd5\x4c\x2d\x55\xfb\xc0\xd5\x7e\x39\x60\xf5\xea\x14\x77\xad\x76\xe2\xf1\x08\xea\x07\x82\x9d\x16\xeb\xc9\xec\xe0\x8e\x5f\xbc\x75\x13\xc9\x76\x50\xdb\xb1\x71\x4f\xd2\x3e\x76\x0f\x65\x4f\x7d\xec\xee\x0f\xdb\xfe\xb4\x83\xdf\xfb\xe0\x77\x2f\x75\xdf\x7d\xf8\xff\x09\x00\x00\xff\xff\x17\x56\xa2\x49\xce\x48\x00\x00")

func apiProtoBytes() ([]byte, error) {
	return bindataRead(
		_apiProto,
		"api.proto",
	)
}

func apiProto() (*asset, error) {
	bytes, err := apiProtoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.proto", size: 18638, mode: os.FileMode(420), modTime: time.Unix(1546457485, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.proto": apiProto,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"api.proto": &bintree{apiProto, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
